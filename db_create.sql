DROP DATABASE IF EXISTS CSE305;
CREATE DATABASE CSE305;
USE CSE305;

CREATE TABLE Location (
  ZipCode INTEGER,
  City VARCHAR(50) NOT NULL,
  State VARCHAR(50) NOT NULL,
  PRIMARY KEY (ZipCode)
);

CREATE TABLE Person (
  SSN INTEGER,
  LastName VARCHAR(50) NOT NULL,
  FirstName VARCHAR(50) NOT NULL,
  Address VARCHAR(200),
  ZipCode INTEGER,
  Telephone INTEGER,
  PRIMARY KEY (SSN),
  FOREIGN KEY (ZipCode) REFERENCES Location (ZipCode)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE Employee (
  Id INTEGER AUTO_INCREMENT CHECK (EmpId > 0 AND EmpId < 1000000000),
  SSN INTEGER,
  StartDate DATE,
  HourlyRate INTEGER,
  PRIMARY KEY (ID),
  FOREIGN KEY (SSN) REFERENCES Person (SSN)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE Accounts (
  Id INTEGER AUTO_INCREMENT,
  DateOpened DATE,
  Type VARCHAR(20) CHECK ( VALUE IN (‘Limited’, ‘Unlimited-1’, ‘Unlimited-2’, ‘Unlimited-3’, ‘Admin’, ‘CustRep’) ),
  Customer INTEGER ,
  UserName CHAR(20),
  PassWord CHAR(20),
  PRIMARY KEY (Id)
);

CREATE TABLE Customer (
  Id INTEGER AUTO_INCREMENT CHECK (CustomerId > 0 AND CustomerId < 1000000000),
  Email VARCHAR(60),
  Rating INTEGER,
  CreditCardNumber VARCHAR(30),
  PRIMARY KEY (Id),
  FOREIGN KEY (Id) REFERENCES Person (SSN)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE Orders (
  Id INTEGER AUTO_INCREMENT,
  OrderDate DATETIME,
  ReturnDate DATETIME,
  PRIMARY KEY (Id)
);

CREATE TABLE Movie (
  Id INTEGER AUTO_INCREMENT,
  Name VARCHAR(100) NOT NULL,
  Type CHAR(20) NOT NULL,
  Rating DECIMAL(3,1),
  NumRating INTEGER,
  DistrFee DECIMAL(7,2),
  NumCopies INTEGER,
  ImageUrl CHAR(100),
  Synopsis VARCHAR(2000),
  ImdbId CHAR(20),
  PRIMARY KEY (Id)
);

CREATE TABLE Actor (
  Id INTEGER AUTO_INCREMENT,
  Name VARCHAR(50) NOT NULL,
  Age INTEGER NOT NULL,
  Gender CHAR(1) NOT NULL,
  Rating DECIMAL(3,1),
  NumRating INTEGER,
  ImageUrl CHAR(100),
  Biography VARCHAR(2000),
  ImdbId CHAR(20),
  PRIMARY KEY (Id)
);

CREATE TABLE Rental (
  AccountId INTEGER,
  CustRepId INTEGER,
  OrderId INTEGER,
  MovieId INTEGER,
  PRIMARY KEY (AccountId, CustRepId, OrderId, MovieId),
  FOREIGN KEY (AccountId) REFERENCES Accounts (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (CustRepId) REFERENCES Employee (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (OrderId) REFERENCES Orders (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (MovieId) REFERENCES Movie (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE MovieQ (
  AccountId INTEGER,
  MovieId INTEGER,
  PRIMARY KEY (AccountId, MovieId),
  FOREIGN KEY (AccountId) REFERENCES Accounts (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (MovieId) REFERENCES Movie (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE MovieF (
  AccountId INTEGER,
  MovieId INTEGER,
  PRIMARY KEY (AccountId, MovieId),
  FOREIGN KEY (AccountId) REFERENCES Accounts (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (MovieId) REFERENCES Movie (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE AppearedIn (
  ActorId INTEGER,
  MovieId INTEGER,
  PRIMARY KEY (ActorId, MovieId),
  FOREIGN KEY (ActorId) REFERENCES Actor (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (MovieId) REFERENCES Movie (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
);

CREATE TABLE Reviews (
  ReviewId INTEGER AUTO_INCREMENT,
  AccountId INTEGER,
  MovieId INTEGER,
  Content VARCHAR(10000),
  PRIMARY KEY (ReviewId),
  FOREIGN KEY (AccountId) REFERENCES Accounts (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  FOREIGN KEY (MovieId) REFERENCES Movie (Id)
    ON DELETE NO ACTION
    ON UPDATE CASCADE
)
